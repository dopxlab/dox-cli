name: Install and Test DOX CLI - Action

on:
  workflow_run:
    workflows: ["Build Release"]  # Trigger this workflow after "Build Release" is completed
    types:
      - completed  # Trigger after the workflow completes
      
env:
  DEBUG_MODE: ${{ vars.DEBUG_MODE }}
  OCI_REG_USER: ${{ vars.OCI_REG_USER }}
  OCI_REG_PASSWORD: ${{ secrets.OCI_REG_PASSWORD }}
  HELM_OCI_URL: ${{ vars.HELM_OCI_URL }}


jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      # Step 0: Ensure required utilities are installed
#      - name: Ensure tar and unzip are available
#        run: |
#          sudo apt-get update
#          sudo apt-get install -y tar unzip

      - name: Checkout Repo
        uses: actions/checkout@v3

      # Step 1: Download and run the installation script
      - name: Install DOX CLI
        run: |
          curl -s -L -o install.sh https://github.com/dopxlab/dox-cli/releases/latest/download/install.sh && bash install.sh
          cp $HOME/.dox/bin/* /usr/local/bin/

      # Step 2: Add the new path for DOX to the $PATH and verify the installation
      - name: Verify DOX CLI installation
        run: |
          dox --version  # Verify that DOX CLI is now available

      # Step 3: DOX Action for dockerfile
      - name: dox docker cat_dockerfile (for jdk 21)
        run: |
          export JDK_VERSION=21
          dox configure maven

          echo "MAVEN: Testing combination of Configuration + Action"
          mvn -v
          whereis mvn
          echo "JAVA 21: Testing combination of Configuration + Action"
          java -version
          whereis java
          dox docker cat_dockerfile

      # Step 4: DOX Action for helm build and push
      - name: dox helm template
        run: |
          dox helm template package push

      # Step 5: DOX Action for argocd deploy
      - name: dox argocd deploy
        run: |
          dox argocd deploy

      # Step 6: DOX Action validating the installation path
      - name: dox maven test
        run: |
          dox maven test          