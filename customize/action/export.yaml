actions:
  # Call each export action by the prefix dox export-vars
  global-vars: |
    source <(dox export BUILD_VERSION)
    source <(dox export REPOSITORY_NAME)
    source <(dox export BRANCH_NAME)
    source <(dox export COMMITTER_NAME)
    source <(dox export COMMITTER_EMAIL)
    source <(dox export COMMIT_URL)
    source <(dox export COMMIT_ID)
    source <(dox export COMMIT_SHORT_ID)
    source <(dox export COMMIT_MESSAGE)
    source <(dox export BRANCH_PREFIX)
    source <(dox export PIPELINE_URL)

  # Generate BUILD_VERSION using a different method
  BUILD_VERSION: |
    timestamp=$(date +"%Y%m%d.%H%M%S")
    formatted_timestamp=$(date +"%Y%m%d.%H%M%S" | sed 's/^0//')  # Clean up leading zero if needed
    pipeline_id=0  # If dynamic, replace with an environment variable

    timestamp_version="${formatted_timestamp}.${pipeline_id}"

    # If BUILD_VERSION is not already set, use the default generated value
    export BUILD_VERSION="${BUILD_VERSION:-$timestamp_version}"
    export BUILD_VERSION="${BUILD_VERSION:-$(get_build_version)}"

    echo "BUILD_VERSION=${BUILD_VERSION}" >> $GITHUB_ENV
    echo "BUILD_VERSION=${BUILD_VERSION}"


  # Get Git repository name
  REPOSITORY_NAME: |
    remote_url=$(git config --get remote.origin.url)
    repo_name=$(basename "$remote_url" .git)
    export REPOSITORY_NAME="${repo_name}"
    echo "Repository Name: ${REPOSITORY_NAME}"

  # Get Git branch name
  BRANCH_NAME: |
    if [[ -n "$GITHUB_REF" && "$GITHUB_REF" == refs/heads/* ]]; then
        export BRANCH_NAME="${GITHUB_REF#refs/heads/}"
    else
        export BRANCH_NAME="unknown"
    fi
    echo "Git Branch: ${BRANCH_NAME}"

  # Get Git committer name
  COMMITTER_NAME: |
    git_committer_name=$(git -C . log -1 --pretty=format:'%an')
    export COMMITTER_NAME="${git_committer_name}"
    echo "Committer Name: ${COMMITTER_NAME}"

  # Get Git committer email
  COMMITTER_EMAIL: |
    git_committer_email=$(git -C . log -1 --pretty=format:'%ae')
    export COMMITTER_EMAIL="${git_committer_email}"
    echo "Committer Email: ${COMMITTER_EMAIL}"

  # Get Git commit URL
  COMMIT_URL: |
    input_url=$(git config --get remote.origin.url)
    git_hash_id=$(git rev-parse HEAD)
    export COMMIT_URL="${input_url/tatasteel-dod@/}/commit/${git_hash_id}"
    echo "Commit URL: ${COMMIT_URL}"

  # Get Git commit ID (hash)
  COMMIT_ID: |
    git_commit_id=$(git rev-parse HEAD)
    export COMMIT_ID="${git_commit_id}"
    echo "Commit ID: ${COMMIT_ID}"

  # Get short Git commit ID (short hash)
  COMMIT_SHORT_ID: |
    git_commit_short_id=$(git rev-parse --short HEAD)
    export COMMIT_SHORT_ID="${git_commit_short_id}"
    echo "Short Commit ID: ${COMMIT_SHORT_ID}"

  # Get Git commit message
  COMMIT_MESSAGE: |
    git_commit_message=$(git log -1 --pretty=%B)
    git_commit_message="$(echo "$git_commit_message" | tr -d '\n' | tr -d "'" | tr -d '"')"
    export COMMIT_MESSAGE="${git_commit_message}"
    echo "Commit Message: ${COMMIT_MESSAGE}"

  # Get Git branch prefix
  BRANCH_PREFIX: |
    branch=$(git rev-parse --abbrev-ref HEAD)
    export BRANCH_PREFIX="${branch%%/*}"
    echo "Git Branch Prefix: ${BRANCH_PREFIX}"

  # Get Pipeline URL
  PIPELINE_URL: |
    export PIPELINE_URL="${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}"
    echo "Pipeline URL: ${PIPELINE_URL}"
